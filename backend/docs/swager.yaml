openapi: 3.0.0
info:
  version: 1.0.0
  title: Vizsgaremek
  description: A sample blog API to illustrate REST API concepts
servers:
  - url: http://localhost:3000
paths:
  /bills:
    get:
      description: Returns a list of bills
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bills returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new bill
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '201':
          description: Bill has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bill/{_id}:
    get:
      description: Returns the bill with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bill data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '404':
          description: Bill with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a bill
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '201':
          description: Bill has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    # patch:
    #   description: Updates a bill
    #   parameters:
    #     - in: path
    #       name: _id
    #       required: true
    #       schema: 
    #         type: string
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Bill'
    #   responses:
    #     '200':
    #       description: Bill has been updated successfully
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Bill'
    #     '400':
    #       description: Invalid request when the post data is invalid
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    #     '500':
    #       description: Internal server error
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    # delete:
    #   description: Removes a bill
    #   parameters:
    #     - in: path
    #       name: _id
    #       required: true
    #       schema: 
    #         type: string
    #   responses:
    #     '200':
    #       description: Bill has been deleted successfully
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             example: {}
    #     '404':
    #       description: Bill based on id is doesn't exist
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    #     '500':
    #       description: Internal server error
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{_id}:
    get:
      description: Returns the user with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a bill
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Bill:
      type: object
      required:
        - order
        - amount
        - date
        - status
      properties:
        order:
          type: string
        amount:
          type: number
        date:
          type: string
        status:
          type: string
    User:
      type: object
      required:
        - email
        - password
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password: 
          type: string
        active: 
          type: boolean
        role: 
          type: string
        accessToken: 
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
